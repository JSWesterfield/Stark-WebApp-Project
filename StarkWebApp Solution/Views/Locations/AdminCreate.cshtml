
@{
    Layout = "~/Views/Shared/_LayoutThemed.cshtml";
}

<article class="article gradient-2">
    <h2 class="title container text-center">Welcome to Art Find</h2>
    <section class="form-section text-center">
        <div class="section-inner container">
            <div class="row">
                <!-- Artwork Form -->
                <div class="form-container col-md-10 col-sm-12 col-xs-12 col-md-push-1 col-sm-push-0 col-xs-push-0" ng-controller="mainController as main">

                    <form name="main.artworkForm" novalidate>
                        <div class="contact-form-inner">
                            <h3 class="subtitle"> Create a New Artwork</h3>
                            <div class="row">
                                <!-- Title Input -->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkTitle.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkTitle">Artwork Title</label>

                                    <input required ng-model="main.artworkTitle" type="text" name="artworkTitle" class="form-control" placeholder="Artwork Title" ng-maxlength="100" autofocus>
                                        <p ng-show="main.artworkForm.artworkTitle.$invalid && main.artworkForm.$submitted" class="help-block">artwork name is required.</p>
                                        <p ng-show="main.artworkForm.artworkTitle.$error.maxlength  && main.artworkForm.$submitted" class="help-block">Location Name is too long.</p>

                                </div>

                                <!-- Artwork Instructions-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artWorkInstructions.$invalid && main.artworkForm.$submitted}">
                                    <label for="artWorkInstructions">Artwork Instructions</label>

                                    <input required ng-model="main.artWorkInstructions" type="text" name="artWorkInstructions" class="form-control" placeholder="Artwork Instructions" ng-maxlength="50">
                                        <p ng-show="main.artworkForm.artWorkInstructions.$invalid && main.artworkForm.$submitted" class="help-block">artwork instructions is required.</p>
                                        <p ng-show="main.artworkForm.artWorkInstructions.$error.maxlength && main.artworkForm.$submitted" class="help-block">Artwork Instructions is too long.</p>

                                </div>

                                <!-- Artwork Point Value-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkPointValue.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkPointValue">Artwork Point Value</label>
  
                                    <input required ng-model="main.artworkPointValue" type="text" name="artworkPointValue" class="form-control" placeholder="Artwork Point Value">
                                        <p ng-show="main.artworkForm.artworkPointValue.$invalid && main.artworkForm.$submitted" class="help-block">artwork point value is required.</p>
                                        <p ng-show="main.artworkForm.artworkPointValue.$error.maxlength && main.artworkForm.$submitted" class="help-block">artwork point value is too long.</p>

                                </div>

                                <!--Artwork Clue-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkClue.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkClue">Artwork Clue</label>

                                        <input required ng-model="main.artworkClue" type="text" name="artworkClue" class="form-control" placeholder="Artwork Clue" ng-maxlength="100">
                                        <p ng-show="main.artworkForm.artworkClue.$error.required && main.artworkForm.$submitted" class="help-block">artwork clue is required.</p>
                                        <p ng-show="main.artworkForm.artworkClue.$error.maxlength && main.artworkForm.$submitted" class="help-block">artwork clue is too long.</p>

                                </div>

                                <!-- Artist Artist Id dropdown-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkArtistId.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkArtistId">Please select an artist id</label>
                                    <input required ng-model="main.artworkArtistId" type="text" name="artworkArtistId" class="form-control" placeholder="Artwork Artist Id">
                                        <p ng-show="main.artworkForm.artworkArtistId.$invalid && main.artworkForm.$submitted" class="help-block">artwork artist id is required.</p>
                                </div>

                                <!--Artwork Fun Fact-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkFunFact.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkFunFact">Artwork Fun Fact</label>

                                    <input required ng-model="main.artworkFunFact" type="text" name="artworkFunFact" class="form-control" placeholder="Artwork Fun Fact" ng-maxlength="200">
                                        <p ng-show="main.artworkForm.artworkFunFact.$invalid && main.artworkForm.$submitted " class="help-block">artwork artist id is required.</p>
                                        <p ng-show="main.artworkForm.artworkFunFact.$error.maxlength && main.artworkForm.$submitted" class="help-block">artist artwork id is too long.</p>
                                    
                                </div>

                                <!-- Artwork ReadMore NOT VALIDATED-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.$submitted}">
                                    <label for="artworkReadMore">Artwork Read More</label>
                                   
                                    <input ng-model="main.artworkReadMore" type="text" name="artworkReadMore" class="form-control" placeholder="Artwork Read More URL" ng-maxlength="1000">
                                        <p ng-show="main.artworkForm.artworkReadMore.$invalid && main.artworkForm.$submitted" class="help-block">artwork read more URL is required.</p>
                                        <p ng-show="main.artworkForm.artworkReadMore.$error.maxlength && main.artworkForm.$submitted" class="help-block">artwork read more URL is too long.</p>
                                </div>

                                <!-- Artwork Location Id NOT VALIDATED-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                    <!--Does locationId need a ng-model?-->
                                    @*<p ng-model="main.locationId" >Artwork Location Id</p>*@
                                    <p>Location Id: {{main.locationId}}</p>
                                </div>

                                <!-- FILE UPLOAD SECTION -->

                                <!--Artwork Image URL -->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkImageUrl.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkImageUrl">Artwork Image Url</label>

                                    <input required ng-model="main.artworkImageUrl" type="text" name="artworkImageUrl" class="form-control" placeholder="Artwork Image Url" ng-maxlength="1000">
                                        <p ng-show="main.artworkForm.artworkImageUrl.$invalid && main.artworkForm.$submitted" class="help-block">artwork image url is required.</p>
                                        <p ng-show="main.artworkForm.artworkImageUrl.$error.maxlength && main.artworkForm.$submitted" class="help-block">artwork image url artwork id is too long.</p>

                                </div>

                                @*<div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        <label class="input-file" for="artworkImageUrl">Artwork Picture</label>
                                    </div>
                                    <div ng-include="'/Scripts/app_fileUpload/FileUploadTemplate.html"></div>
                                </div>*@

                                <!-- END OF FILE UPLOAD SECTION -->

                                <!-- SUBMIT BUTTON -->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                    <!--Submit button will only work when artworkForm's validation is satisfied, or when all inputs that have required condition inside them is met, ng-disabled directive disables the submit button until artworkForm is valid as an added precaution-->
                                    <button ng-click="main.submitArtworkForm(main.artworkForm.$valid)" type="submit" class="btn btn-block btn-cta btn-cta-primary">Submit</button>
                                </div>

                            </div><!--//row-->
                        </div>
                    </form><!--//contact-form-->
                </div><!--//form-container-->
            </div><!--//row-->
        </div><!--//section-inner-->
    </section><!--//promo-section-->
</article>
@section scripts
{
    <script src="~/Scripts/app_fileUpload/FileUploadController.js"></script>
    <script src="~/Scripts/app/directives/files-model.js"></script>
    <script src="~/Scripts/stark/services/stark.services.artists.js"></script>
    <script src="~/Scripts/stark/Services/stark.services.artworks.js"></script>
    <script src="~/Scripts/stark/services/stark.services.uploads.js"></script>
    <script src="~/Scripts/stark/services/stark.services.locations.js"></script>
    <script type="text/javascript">
        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('mainController', MainController);

            MainController.$inject = ['$scope', '$baseController', 'artworksService', 'notificationsService', 'appConfig','uploadsService',];

            function MainController($scope, $baseController, artworksService, notificationsService, appConfig, uploadsService) {

                var vm = this;
                //vm.artworkImageUrlUpload = null;
                vm.fileUpload = null;

                vm.notificationsService = notificationsService;
                vm.$scope = $scope;
                //on submission this function should execute
                vm.createArtwork = _createArtwork;
                vm.onFileUploadCreateSuccess = _onFileUploadCreateSuccess;
                vm.uploadsService = uploadsService;
                vm.onCreateArtworkError = _onCreateArtworkError;
                vm.onCreateArtworkSuccess = _onCreateArtworkSuccess;
                vm.locationId = appConfig.locationId;
                vm.readArtworkForm = readArtworkForm
                vm.data = null;
                vm.artworkImageUrl = null;
                //set the default image displayed to the default mona lisa image
                //var defaultImageUrl = '/Content/default.svg'
                vm.submitArtworkForm = _submitArtworkForm; //part of 1a. function

                //watches for the on click, execute the _render function
                //$scope.$on('$includeContentLoaded', _render);
                //$scope.$on('fileUpload.urlAvailable', _urlReceived);

                $baseController.merge(vm, $baseController);

                vm.render = _render;

                //1. RENDER FORM
                function _render() {
                    //show page started up
                    vm.$log.log('Page started Up');
                    //show the the default fileupload prior to the user uploading
                    //$scope.$broadcast('fileUpload.urlLoad', { url: null, defaultPreviewUrl: defaultImageUrl });

                    //display the appConfig Object to see props inside
                    vm.$log.log(appConfig);
                }

                // 1a. SUBMIT ARTWORK FORM - Verfies that form is valid
                function _submitArtworkForm(isValid) {
                    if (isValid) {
                        vm.createArtwork();
                    }

                    else {
                        vm.$log.log('invalid artwork data');
                    }
                }

                //2. READ FORM
                //create variable that contains the data from from form(artworkForm), CREATE vm.artworkData
                function readArtworkForm() {
                    if (vm.artworkForm.$valid) {
                        if (vm.artworkId == null) {
                            vm.artworkData = {
                                artworkTitle: vm.artworkTitle
                                , artworkArtistId: vm.artworkArtistId
                                , artworkInstructions: vm.artworkInstructions
                                , artworkClue: vm.artworkClue
                                , artworkPointValue: vm.artworkPointValue
                                , artworkFunFact: vm.artworkFunFact
                                , artworkReadMore: vm.artworkReadMore
                                , locationId: appConfig.locationId
                                , artworkImageUrl: vm.artworkImageUrl
                                //, artworkImageUrl: artworkImageUrl.url
                            }
                        }
                        else {
                            //pre-populate form if artworkId exists.
                            //if(vm.artworkId != null)
                        }
                        return artworkData;
                    }
                }

                //3. createArtwork function
                function _createArtwork() {
                    //immediate validation for picture upload, change to on submission check for if(vm.artworkImageUrl == null)
                    if (vm.artworkImageUrl == null) {
                        vm.notificationsService.success("We made it to the createArtwork function");
                        vm.notificationsService.error('No image file was selected');
                        vm.$log.log("error, artworkImageUrl is null");
                    } else {
                        //if the artworkForm is valid and the artworkImageUrl is not undefined
                        if (vm.artworkForm.$valid && vm.artworkImageUrl) {
                            vm.notificationsService.Error('Error. Either invalid artform or artworkImageUrl')
                            vm.fileUpload = vm.artworkImageUrl;
                            if (vm.fileUpload != null) {
                                vm.notificationsService.success('You uploaded an image!');
                            }     
                            //create the artwork
                            //vm.uploadsService.create(vm.fileUpload, _onFileUploadCreateSuccess, _onFileUploadCreateError);

                        } else {
                            vm.$log.log('invalid form data');
                            vm.notificationsService.success("We made it to the createArtwork function"); //verification, delete after
                        }
                    }
                };

                //4. onFileUploadCreateSuccess function to create an artwork after the success of the file upload
                //function _onFileUploadCreateSuccess(response) {
                function _onFileUploadCreateSuccess() {
                    // create var called imageUrlUpload set to response.item.
                    //vm.artworkImageUrlUpload = response.item;
                    
                    vm.data = vm.readArtworkForm();
                    vm.data.locationId = appConfig.locationId;
                    vm.data.artworkImageUrl = response.item;
                    vm.artworksService.create(vm.data, _onCreateArtworkSuccess, _onCreateArtworkError);
                }

                //5. onFileUploadCreateError error callback function
                function _onFileUploadCreateError() {
                    vm.$log.log("We Are sorry, an error has occured");
                    vm.notificationsService.error("Error with uploading your artwork.");
                }

                //6. on create artwork success...
                function _onCreateArtworkSuccess(response) {
                    vm.$log.log("Success!");
                    vm.locationId = appConfig.locationId;
                    if (vm.locationId != null) {
                        vm.locationId = appConfig.locationId;
                    }
                    vm.notificationsService.redirectDialog('/admin/artworks/create?locationId=' + vm.locationId, 'You have created a new artwork.');
                };

                //7. on create artwork error...
                function _onCreateArtworkError(response) {
                    vm.$log.log("Error");
                    vm.notificationsService.error('There was an error creating the artwork.');
                };
            }
        })();
    </script>
}
