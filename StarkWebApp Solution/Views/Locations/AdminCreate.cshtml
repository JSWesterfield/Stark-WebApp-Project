
@{
    Layout = "~/Views/Shared/_LayoutThemed.cshtml";
}


<article class="article gradient-2">
    <h2 class="title container text-center">Welcome to Art Find</h2>
    <section class="form-section text-center">
        <div class="section-inner container">
            <div class="row">

                <!-- Artwork Form -->
                <div class="form-container col-md-10 col-sm-12 col-xs-12 col-md-push-1 col-sm-push-0 col-xs-push-0" ng-controller="mainController as main">
                    <form id="artworkForm" name="artworkForm" ng-submit="main.onSubmitArtworkForm(artworkForm.$valid)" novalidate>
                        <div class="contact-form-inner">
                            <h3 class="subtitle"> Create a New Artwork</h3>
                            <div class="row">

                                <!-- Title Input -->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkTitle.$invalid && main.artworkForm.$submitted}">
                                    <label class="" for="artworkTitle">Artwork Title</label>
                                    <input required ng-model="main.artworkInfo.artworkTitle" type="text" name="artworkTitle" class="form-control" placeholder="Artwork Title" ng-maxlength="100" autofocus>
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkTitle.$invalid" class="help-block">artwork name is required.</p>
                                        <p ng-show="main.artworkForm.artworkTitle.$error.maxlength" class="help-block">Location Name is too long.</p>
                                    </div>
                                </div>

                                <!-- Artwork Instructions-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkInstructions.$invalid && main.artworkForm.$submitted}">
                                    <label class="" for="artworkInstructions">Artwork Instructions</label>
                                    <input required ng-model="main.artworkInfo.artworkInstructions" type="text" name="artWorkInstructions" class="form-control" placeholder="Artwork Instructions" ng-maxlength="50">
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkInstructions.$invalid" class="help-block">artwork instructions is required.</p>
                                        <p ng-show="main.artworkForm.artworkInstructions.$error.maxlength" class="help-block">Artwork Instructions is too long.</p>
                                    </div>
                                </div>

                                <!-- Artwork Point Value-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkPointValue.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkPointValue">Artwork Point Value</label>
                                    <input required ng-model="main.artworkInfo.artworkPointValue" type="text" name="artworkPointValue" class="form-control" placeholder="Artwork Point Value">
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkPointValue.$invalid" class="help-block">artwork point value is required.</p>
                                        <p ng-show="main.artworkForm.artworkPointValue.$error.maxlength" class="help-block">artwork point value is too long.</p>
                                    </div>
                                </div>

                                <!--Artwork Clue-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkClue.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkClue">Artwork Clue</label>
                                    <input required ng-model="main.artworkInfo.artworkClue" type="text" name="artworkClue" class="form-control" placeholder="Artwork Clue" ng-maxlength="100">
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkClue.$error.required" class="help-block">artwork clue is required.</p>
                                        <p ng-show="main.artworkForm.artworkClue.$error.maxlength" class="help-block">artwork clue is too long.</p>
                                    </div>
                                </div>

                                <!-- Artist Artist Id dropdown-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkArtistId.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkArtistId">Artwork Artist Id</label>
                                    <input required ng-model="main.artworkInfo.artworkArtistId" type="text" name="artworkArtistId" class="form-control" placeholder="Artwork Artist Id">
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkArtistId.$invalid" class="help-block">artwork artist id is required.</p>
                                    </div>
                                </div>

                                <!--Artwork Fun Fact-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkFunFact.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkFunFact">Artwork Fun Fact</label>
                                    <input required ng-model="main.artworkInfo.artworkFunFact" type="text" name="artworkFunFact" class="form-control" placeholder="Artwork Fun Fact" ng-minlength="3" ng-maxlength="200">
                                    <div ng-show="main.artworkForm.$submitted">
                                        <p ng-show="main.artworkForm.artworkFunFact.$invalid" class="help-block">artwork artist id is required.<p>
                                        <p ng-show="main.artworkForm.artworkFunFact.$error.maxlength" class="help-block">artisit artwork id is too long.</p>
                                    </div>
                                </div>

                                <!-- Artwork ReadMore NOT VALIDATED-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group" ng-class="{'has-error' : main.artworkForm.artworkReadMore.$invalid && main.artworkForm.$submitted}">
                                    <label for="artworkReadMore">Artwork Read More</label>
                                    <input ng-model="main.artworkInfo.artworkReadMore" type="text" name="artworkReadMore" class="form-control" placeholder="Artwork Read More">
                                </div>

                                <!-- Artwork Location Id NOT VALIDATED-->
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                    <!--Does artworkLocationId need a ng-model?-->
                                    <p ng-model="main.artworkInfo.artworkLocationId" >Artwork Location Id</p>
                                </div>

                                <!-- FILE UPLOAD SECTION -->
                                @*<div class="form-group col-md-10">
                                    <input ng-model="main.artworkInfo.artworkImageUrl" type="file" accept="image/*" name="artworkImageUrl">
                                </div>
                                <br />
                                <div class="form-group col-md-2">
                                    <img src="#" id="imageSrc" alt="Artwork Image" style="display:none" width="70" />
                                </div>*@
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        <label class="input-file" for="imageUrl">Profile Picture</label>
                                    </div>
                                    <div ng-include="'/Scripts/app_fileUpload/FileUploadTemplate.html'"></div>
                                </div>
                                <!-- END OF FILE UPLOAD SECTION -->
                                <div class="row">
                                    <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                        <!--Submit button will only work when artworkForm's validation is satisfied, or when all inputs that have required condition inside them is met, ng-disabled directive disables the submit button until artworkForm is valid as an added precaution-->
                                        <button type="button" id="btnCreateArtwork" class="btn btn-block btn-cta btn-cta-primary" ng-click="main.submitArtworkForm(main.submitArtworkForm.$valid)" ng-disabled="artworkForm.$invalid">Submit</button>
                                    </div>
                                </div>
                            </div><!--//row-->
                        </div>
                    </form><!--//contact-form-->
                </div><!--//form-container-->
            </div><!--//row-->
        </div><!--//section-inner-->
    </section><!--//promo-section-->
</article>

@section scripts
{

    <script src="~/Scripts/app_fileUpload/FileUploadController.js"></script>
    <script src="~/Scripts/app/directives/files-model.js"></script>
    <script src="~/Scripts/stark/services/stark.services.artists.js"></script>
    <script src="~/Scripts/stark/Services/stark.services.artworks.js"></script>
    <script src="~/Scripts/stark/services/stark.services.uploads.js"></script>
    <script src="~/Scripts/stark/services/stark.services.locations.js"></script>

    <script type="text/javascript">
        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('mainController', MainController);

            MainController.$inject = ['$scope', '$baseController', 'artworksService', 'notificationsService', 'appConfig','uploadsService',];

            function MainController($scope, $baseController, artworksService, notificationsService, appConfig, uploadsService) {

                var vm = this;

                vm.locationId = null;
                vm.imageUrlUpload = null;
                vm.fileUpload = null;

				vm.notificationsService = notificationsService;
				vm.$scope = $scope;
				vm.createArtwork = _createArtwork;
				vm.onFileUploadCreateSuccess = _onFileUploadCreateSuccess;
                // when you press the submit button this should execute
				vm.onSubmitArtworkForm = _onSubmitArtworkForm;
				vm.onCreateArtworkError = _onCreateArtworkError;
				vm.onCreateArtworkSuccess = _onCreateArtworkSuccess;
                //set the default image displayed to the default mona lisa image
				var defaultImageUrl = '/Content/default.svg'

                //watches for the on click, execute the _render function
                $scope.$on('$includeContentLoaded', _render);
                //$scope.$on('fileUpload.urlAvailable', _urlReceived);


                $baseController.merge(vm, $baseController);

                vm.render = _render;

                //1. Render form
                function _render() {
                    //show page started up
                    vm.$log.log('Page started Up');

                    //show the the default fileupload prior to the user uploading
                    $scope.$broadcast('fileUpload.urlLoad', { url: null, defaultPreviewUrl: defaultImageUrl });

                    //display the appConfig Object to see props inside
                    vm.$log.log(appConfig);

                    //display the user Id
                    vm.$log.log(appConfig.item);
                    _createArtwork();
         
                }

                //3. createArtwork function
                function _createArtwork() {
                    //immediate validation for picture upload, change to on submission check for if(vm.artworkImageUrl == null)
                    if(vm.artworkImageUrl == null) {
                        vm.notificationsService.error('No image file was selected');
                    } else {
                        //if the artworkForm is valid and the artworkImageUrl is not undefined
                        if(vm.artworkForm.$valid && vm.artworkImageUrl) {
                            vm.fileUpload = vm.artworkImageUrl[0]; 

                            //create variable that contains the data from from form(artworkForm), CREATE vm.myData
                            if (vm.artworkForm.$valid) {
                                if (vm.artworkId == null) {
                                    vm.MyData = {
                                        artworkTitle: vm.artworkTitle
                                        , artworkInstructions: vm.artworkInstructions
                                        , artworkPointValue: vm.artworkPointValue
                                        , artworkClue: vm.artworkClue
                                        , artworkArtistId: vm.artworkArtistId
                                        , artworkFunFact: vm.artworkFunFact
                                        , artworkReadMore: vm.artworkReadMore
                                        , artworkLocationId: appConfig.locationId
                                        , imageUrl: imageUrl.url
                                    }

                                }
                                else {
                                    //prepopulate form
                                }
                            }

                            //create the artwork
                            vm.artworksService.create(vm.fileUpload, vm.myData, _onFileUploadCreateSuccess, _onFileUploadCreateError);
                        }
                        else {
                            vm.$log.log('invalid form data');
                        }
                    }
                };

                //4. onFileUploadCreateSuccess function to create an artwork after the success of the file upload
                function _onFileUploadCreateSuccess(response) {
                    // create var called imageUrlUpload set to response.item. 
                    vm.imageUrlUpload = response.item;

                    //vm.data = vm.readArtworkForm();
                    //vm.data.locationId = appConfig.locationId;
                    //vm.data.imageUrl = response.item;
                    vm.artworksService.create(appConfig.item, _onCreateArtworkSuccess, _onCreateArtworkError);
                }

                //5. onFileUploadCreateError error callback function
                function _onFileUploadCreateError() {
                    vm.$log.log("We Are sorry, an error has occured");
                    vm.notificationsService.error("Error with uploading your artwork.");
                }

                //6. submitArtworkForm function
                function _onSubmitArtworkForm() {
                    //checks for validity. If submitArtworkForm is $invalid send a notification error & console.log
					if(main.submitArtworkForm.$invalid){
						vm.notificationsService.error("Error");
						vm.$log.log("We are sorry, an error has occured.");
					}
                    //else make a call to the create function of artworksService
					else {

					}
                }

                //7. on create artwork success...
                function _onCreateArtworkSuccess(response) {
                    vm.$log.log("Success!");
                    vm.locationId = response.locationId;
                    if (vm.locationId != null) {
                        vm.locationId = appConfig.locationId;
                    }
                    vm.notificationsService.redirectDialog('/admin/artwoks?locationId' + locationId, 'You have created a new artwork.');
                };

                //8. on create artwork error...
                function _onCreateArtworkError() {
                    vm.$log.log("Error");
                    vm.notificationsService.error('There was an error creating the artwork.');
                };
            }

        })();
    </script>
}
