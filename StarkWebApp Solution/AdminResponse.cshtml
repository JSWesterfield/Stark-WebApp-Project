@{
    ViewBag.Title = "Admin Response";
    Layout = "~/Views/Shared/_LayoutThemed.cshtml";
}

@section styles {
    @*<link rel="stylesheet" href="..."/>*@

    @*<style></style>*@
}

<article class="article gradient-2">
    <h2 class="title container text-center">Admin Response Requests</h2>
    <section>
        <div class="section-inner container text-center">
            <div class="row">
                <div class="col-md-10 col-sm-12 col-xs-12 col-md-push-1 col-sm-push-0 col-xs-push-0">
                    <h3 class="subtitle">Support Requests</h3>
                    <div class="content">
                        <!--Where we'll put our data when we receive it from the response.-->
                        <p id="subject" name="subject"></p>
                        <p id="body" name="body"></p>
                        <p id="email" name="email"></p>
                        <p id="userId" name="userId"></p>
                        <form id="form">

                            <!--textarea text color, black. Courtesy of stackoverflow.--> 
                            <textarea id="textData" rows="7" cols="70" color="black" onfocus="if(this.value==this.defaultValue)this.value='';this.style.color='#333'" onblur="if(this.value=='') {this.value=this.defaultValue;this.style.color='#CCC'}" autofocus></textarea>
                        </form>
                        <button type="submit" class="btn btn-default" name="getResponse" id="formBtn">Get Response</button>

                        </div>
                    </div><!--//content-->
                </div>
            </div><!--//row-->
    </section>
</article>

@section scripts {

<script src="/Scripts/stark/services/stark.services.supportRequests.js"></script>

<script type="text/javascript">
    stark.page.startUp = function () {
        console.log("AdminResponse page started up!");
        $("#formBtn").on("click", stark.page.handlers.updateAdminResponse);

        var getById = stark.page.config.item;
        stark.services.supportRequests.getById(getById, stark.page.handlers.getByIdSuccess, stark.page.handlers.getByIdError);
    };

    // GETBYID SUCCESS
    stark.page.handlers.getByIdSuccess = function (response) {
        stark.services.notifications.success("You have successfully received your User response!");
        console.log(response);

        var supportRequestId = stark.page.config.item;

        if (!response.item.adminUserId) {
            console.log("Create a Admin response to this User support request");

        }
        else {
            // 1. prepopulate the response textarea
            $("#textData").val(response.item.response); 
            // 2. disable the submit button
            $("#formBtn").text("Disabled").attr("id", "disabledFormBtn");
            stark.services.notifications.error("You have already responded to this user support request.");
            console.log("You have already responded to this user support request.");
        }

        //populates the user's support request regardless if the admin has responded or not.
        $("#subject").text(response.item.subject);
        $("#body").text(response.item.body);
        $("#email").text(response.item.email);
        $("#userId").text(response.item.userId);
    }

    // GETBYID ERROR
    stark.page.handlers.getByIdError = function () {
        stark.services.notifications.error("There was an error updating your admin response.");
        console.log("error");
    }

    // ADMIN RESPONSE SUCCESS
    stark.page.handlers.onResponseSuccess = function () {
        stark.services.notifications.success("You have successfully updated your admin response!");
        console.log("The response has been sent!");
    }

    // ADMIN RESPONSE ERROR
    stark.page.handlers.onResponseError = function () {
        stark.services.notifications.error("There was an error updating your admin response.");
        console.log("you have an error with updating your response");
    }

    // INVOKE UPDATE RESPONSE FUNCTION
    stark.page.handlers.updateAdminResponse = function () {
        var supportRequestId = stark.page.config.item;   //this is a duplicate. This should read the AdminResponseId
        stark.page.handlers.supportResponseData = {         //Made this a global variable so that the GetById success validation can see "supportResponseData" function defined, for AdminResponse verification.
            Response: $("#textData").val()
            , Id: supportRequestId                        
        }

        stark.services.supportRequests.updateResponse(supportRequestId, stark.page.handlers.supportResponseData, stark.page.handlers.onResponseSuccess, stark.page.handlers.onResponseError);
    };

</script>

}

